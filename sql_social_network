Schema::
Highschooler ( ID, name, grade ) 
English: There is a high school student with unique ID and a given first name in a certain grade. 

Friend ( ID1, ID2 ) 
English: The student with ID1 is friends with the student with ID2. Friendship is mutual, so if (123, 456) is in the Friend table, so is (456, 123). 

Likes ( ID1, ID2 ) 
English: The student with ID1 likes the student with ID2. Liking someone is not necessarily mutual, so if (123, 456) is in the Likes table, there is no guarantee that (456, 123) is also present. 

//Find the names of all students who are friends with someone named Gabriel. 
select name
from highschooler h join friend f on h.id = f.id2
  where f.id1 in (select id from highschooler where name = 'Gabriel');

//For every student who likes someone 2 or more grades younger than themselves, 
//return that student's name and grade, and the name and grade of the student they like.
select h.name, h.grade, l.name, l.grade
from highschooler h
  join ( select * from highschooler h join likes l on h.id = l.id2) l on h.id = l.id1
  where h.grade >= l.grade + 2;    

//For every pair of students who both like each other, return the name and grade of 
//both students. Include each pair only once, with the two names in alphabetical order. 
select h1.name, h1.grade, h2.name, h2.grade
from  (select id1, id2 from likes
    where id1 in (select id2 from likes)
    and id2 in (select id1 from likes)) l
    join
    highschooler h1 join highschooler h2
    on h1.id = l.id1 and h2.id = l.id2 and h1.name < h2.name;
    
//    
